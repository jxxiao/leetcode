class Solution:
    def isValidSudoku(self, board):
        """
        :type board: List[List[str]]
        :rtype: bool
        """
        # 使用seen记录下每个元素的位置。(i,c)表示c在i行(c,i)表示在i列。(i/2,j/3,c)表示c在哪一块
        seen = []
        for i, row in enumerate(board):
            for j, c in enumerate(row):
                if c != '.':
                    seen += [(c, j), (i, c), (i // 3, j // 3, c)]
        # 判断去重后的seen和未去重的seen是否相等
        return len(seen) == len(set(seen))


s = [[".", ".", ".", ".", "5", ".", ".", "1", "."],
     [".", "4", ".", "3", ".", ".", ".", ".", "."],
     [".", ".", ".", ".", ".", "3", ".", ".", "1"],
     ["8", ".", ".", ".", ".", ".", ".", "2", "."],
     [".", ".", "2", ".", "7", ".", ".", ".", "."],
     [".", "1", "5", ".", ".", ".", ".", ".", "."],
     [".", ".", ".", ".", ".", "2", ".", ".", "."],
     [".", "2", ".", "9", ".", ".", ".", ".", "."],
     [".", ".", "4", ".", ".", ".", ".", ".", "."]]

print(Solution().isValidSudoku(s))
